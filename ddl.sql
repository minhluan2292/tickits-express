-- public.genre definition
-- Drop table
-- DROP TABLE public.genre;
CREATE TABLE public.genre (
    id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY(
        INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE
    ),
    genre_name varchar NULL,
    CONSTRAINT movie_genre_pkey PRIMARY KEY (id)
);
-- public.movies definition
-- Drop table
-- DROP TABLE public.movies;
CREATE TABLE public.movies (
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    image varchar NULL,
    movie_name varchar NULL,
    release_date date NULL,
    duration_hour varchar NULL,
    duration_minute varchar NULL,
    director varchar NULL,
    aktors text NULL,
    sinopsis text NULL,
    category text NULL,
    CONSTRAINT movies_pkey PRIMARY KEY (id)
);
-- public.payment definition
-- Drop table
-- DROP TABLE public.payment;
CREATE TABLE public.payment (
    id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY(
        INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE
    ),
    payment_method varchar NULL,
    CONSTRAINT payment_pkey PRIMARY KEY (id)
);
-- public.teathers definition
-- Drop table
-- DROP TABLE public.teathers;
CREATE TABLE public.teathers (
    id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY(
        INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE
    ),
    teather_name varchar NULL,
    image varchar NULL,
    address text NULL,
    CONSTRAINT teathers_pkey PRIMARY KEY (id)
);
-- public.users definition
-- Drop table
-- DROP TABLE public.users;
CREATE TABLE public.users (
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    email varchar NULL,
    "password" varchar NULL,
    first_name varchar NULL,
    last_name varchar NULL,
    phone varchar NULL,
    role_id int8 NULL DEFAULT '1'::bigint,
    image varchar NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);
-- public.movie_genre definition
-- Drop table
-- DROP TABLE public.movie_genre;
CREATE TABLE public.movie_genre (
    movie_id uuid NULL,
    genre_id int8 NULL,
    CONSTRAINT movie_genre_genre_id_fkey FOREIGN KEY (genre_id) REFERENCES public.genre(id) ON DELETE CASCADE,
    CONSTRAINT movie_genre_movie_id_fkey FOREIGN KEY (movie_id) REFERENCES public.movies(id) ON DELETE CASCADE
);
-- public.teather_studio definition
-- Drop table
-- DROP TABLE public.teather_studio;
CREATE TABLE public.teather_studio (
    id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY(
        INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE
    ),
    teather_id int8 NULL,
    open_date date NULL,
    open_time time NULL,
    price int8 NULL,
    movie_id uuid NULL,
    CONSTRAINT teather_studio_pkey PRIMARY KEY (id),
    CONSTRAINT teather_studio_movie_id_fkey FOREIGN KEY (movie_id) REFERENCES public.movies(id) ON DELETE CASCADE,
    CONSTRAINT teather_studio_teather_id_fkey FOREIGN KEY (teather_id) REFERENCES public.teathers(id) ON DELETE CASCADE
);
-- public.history definition
-- Drop table
-- DROP TABLE public.history;
CREATE TABLE public.history (
    id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY(
        INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE
    ),
    created_at timestamptz NULL DEFAULT now(),
    movie_id uuid NULL,
    teathstudio_id int8 NULL,
    user_id uuid NULL,
    total_price int8 NULL,
    payment_id int8 NULL,
    CONSTRAINT history_pkey PRIMARY KEY (id),
    CONSTRAINT history_movie_id_fkey FOREIGN KEY (movie_id) REFERENCES public.movies(id),
    CONSTRAINT history_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.payment(id),
    CONSTRAINT history_teathstudio_id_fkey FOREIGN KEY (teathstudio_id) REFERENCES public.teather_studio(id),
    CONSTRAINT history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
-- public."transaction" definition
-- Drop table
-- DROP TABLE public."transaction";
CREATE TABLE public."transaction" (
    history_id int8 NULL,
    block_name varchar NULL,
    block_number varchar NULL,
    CONSTRAINT transaction_history_id_fkey FOREIGN KEY (history_id) REFERENCES public.history(id)
);